# Generated by Django 3.2.2 on 2022-03-03 17:01

import core.fields
import core.models.user
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('is_customer', models.BooleanField(default=False, verbose_name='Customer Status')),
                ('is_merchant', models.BooleanField(default=False, verbose_name='Merchant Status')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'user',
                'ordering': ['email'],
                'permissions': (('remove_user', 'Can remove user'),),
            },
            managers=[
                ('objects', core.models.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cart_id', models.CharField(max_length=100, unique=True)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('total', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Collaborator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('date_joined', models.DateTimeField(auto_now=True, verbose_name='date join')),
            ],
            options={
                'verbose_name': 'collaborator',
                'verbose_name_plural': 'collaborators',
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField(verbose_name='Address')),
                ('address_2', models.TextField(blank=True, null=True, verbose_name='Address 2')),
                ('city', models.CharField(max_length=150, verbose_name='City')),
                ('state', models.CharField(max_length=150, verbose_name='State')),
                ('country', django_countries.fields.CountryField(default='US', max_length=2)),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Name')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='companies/', verbose_name='Logo')),
                ('slug', models.SlugField(editable=False, verbose_name='Slug')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone', core.fields.PhoneField(max_length=30, verbose_name='Phone')),
                ('sms_template', models.TextField(default='{{ customer }}, were you satisfied with your experience with {{ company }}? Please take 30 seconds to leave us feedback here {{ url }} Text STOP to stop.', help_text='Available variables: {{ customer }}, {{ company }}, {{ url }}.', verbose_name='SMS template')),
                ('widget_welcome_text', models.TextField(default='Would you recommend us to your friends and family?', verbose_name='Widget welcome text')),
                ('widget_positive_text', models.TextField(default='Thank you for your help! Please click below to share your experience on one of these sites:', verbose_name='Widget positive text')),
                ('widget_negative_text', models.TextField(default='Tells us a little bit about your experience.', verbose_name='Widget negative text')),
                ('widget_submitted_title', models.TextField(default='Thank you!', verbose_name='Widget submitted title')),
                ('widget_submitted_text', models.TextField(default='Your feedback has been send successfully.', verbose_name='Widget submitted text')),
                ('parent_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='Parent company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('users', models.ManyToManyField(blank=True, related_name='_core_company_users_+', through='core.Collaborator', to=settings.AUTH_USER_MODEL, verbose_name='users')),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Modification date')),
                ('first_name', models.CharField(max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email')),
                ('phone', core.fields.PhoneField(blank=True, max_length=30, null=True, verbose_name='phone')),
                ('send_sms', models.BooleanField(default=True, verbose_name='Send SMS')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='Company')),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(editable=False, unique=True, verbose_name='Slug')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='services/', verbose_name='Icon')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('slug', models.SlugField(unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField()),
                ('image', models.ImageField(upload_to='products/')),
                ('available', models.BooleanField()),
                ('stock', models.IntegerField()),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='Company')),
            ],
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Modification date')),
                ('phone', core.fields.PhoneField(max_length=30, unique=True, verbose_name='Phone')),
                ('api_id', models.CharField(max_length=100, verbose_name='API ID')),
                ('date_connection', models.DateTimeField(blank=True, null=True, verbose_name='Connection date')),
                ('company', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sender', to='core.company', verbose_name='Company')),
            ],
            options={
                'verbose_name': 'Phone',
                'verbose_name_plural': 'Phones',
                'ordering': ['phone'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Modification date')),
                ('type', models.SlugField(choices=[('email', 'Email'), ('sms', 'SMS')], default='sms', editable=False, verbose_name='Type')),
                ('direction', models.SlugField(choices=[('inbound', 'Inbound'), ('outbound', 'Outbound')], default='outbound', editable=False, verbose_name='Direction')),
                ('date_send', models.DateTimeField(blank=True, null=True, verbose_name='Send date')),
                ('date_read', models.DateTimeField(blank=True, null=True, verbose_name='Read date')),
                ('from_number', core.fields.PhoneField(blank=True, max_length=30, null=True, verbose_name='From number')),
                ('to_number', core.fields.PhoneField(blank=True, max_length=30, null=True, verbose_name='To number')),
                ('from_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='From email')),
                ('to_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='To email')),
                ('api_id', models.CharField(blank=True, max_length=250, null=True, verbose_name='API ID')),
                ('subject', models.CharField(blank=True, max_length=250, null=True, verbose_name='Subject')),
                ('content', models.TextField(verbose_name='Content')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='Company')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.customer', verbose_name='Customer')),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Modification date')),
                ('detail', models.TextField(blank=True, null=True, verbose_name='Detail')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='Company')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.customer', verbose_name='Customer')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.service', verbose_name='Service')),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedbacks',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.AddField(
            model_name='collaborator',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='company'),
        ),
        migrations.AddField(
            model_name='collaborator',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='Company')),
                ('products', models.ManyToManyField(blank=True, to='core.Product')),
            ],
        ),
        migrations.CreateModel(
            name='CartProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.product')),
            ],
        ),
        migrations.AddField(
            model_name='cart',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='Company'),
        ),
        migrations.AddField(
            model_name='cart',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='companies',
            field=models.ManyToManyField(blank=True, related_name='_core_user_companies_+', through='core.Collaborator', to='core.Company', verbose_name='Companies'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='icon/', verbose_name='Icon')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
                ('url', models.URLField(verbose_name='URL')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='Company')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.service', verbose_name='Service')),
            ],
            options={
                'verbose_name': 'Link',
                'verbose_name_plural': 'Links',
                'ordering': ['order', 'service'],
                'unique_together': {('company', 'service')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='collaborator',
            unique_together={('user', 'company')},
        ),
    ]
